// Generated by Swift version 1.1 (swift-600.0.57.4)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import ObjectiveC;
@import CoreLocation;
@import CoreBluetooth;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSNumber (SWIFT_EXTENSION(Nutella))
@end



/// This protocol is there for future uses
SWIFT_PROTOCOL("_TtP7Nutella15NutellaDelegate_")
@protocol NutellaDelegate
@end



/// This protocol allows client to control the asynchronous requests, response and message received
SWIFT_PROTOCOL("_TtP7Nutella18NutellaNetDelegate_")
@protocol NutellaNetDelegate
@optional

/// Called when a message is received from a publish.
///
/// \param channel The name of the Nutella chennal on which the message is received.
///
/// \param message The message.
///
/// \param from The actor name of the client that sent the message.
- (void)messageReceived:(NSString *)channel message:(id)message componentId:(NSString *)componentId resourceId:(NSString *)resourceId;

/// A response to a previos request is received.
///
/// \param channelName The Nutella channel on which the message is received.
///
/// \param requestName The optional name of request.
///
/// \param response The dictionary/array/string containing the JSON representation.
- (void)responseReceived:(NSString *)channelName requestName:(NSString *)requestName response:(id)response;

/// A request is received on a Nutella channel that was previously handled (with the handleRequest).
///
/// \param channelName The name of the Nutella chennal on which the request is received.
///
/// \param request The dictionary/array/string containing the JSON representation of the request.
- (id)requestReceived:(NSString *)channelName request:(id)request componentId:(NSString *)componentId resourceId:(NSString *)resourceId;
@end

@class CLLocationManager;
@class CLBeaconRegion;


/// This class enables the communication with RoomPlaces module
SWIFT_CLASS("_TtC7Nutella15NutellaLocation")
@interface NutellaLocation : NSObject <NutellaNetDelegate, CLLocationManagerDelegate, CBPeripheralDelegate>
- (void)downloadBeaconList;
- (void)downloadResourceList;
- (void)subscribeResourceUpdate;
- (void)startMonitoringRegions:(NSArray *)uuids;
- (void)startMonitorning;
- (void)stopMonitoring;
- (void)startVirtualBeacon;
- (void)startVirtualBeacon:(NSInteger)major minor:(NSInteger)minor;
- (void)stopVirtualBeacon;
- (void)locationManager:(CLLocationManager *)manager didRangeBeacons:(NSArray *)didRangeBeacons inRegion:(CLBeaconRegion *)inRegion;
- (void)messageReceived:(NSString *)channel message:(id)message componentId:(NSString *)componentId resourceId:(NSString *)resourceId;
- (void)responseReceived:(NSString *)channelName requestName:(NSString *)requestName response:(id)response;
@end


#pragma clang diagnostic pop
